<?xml version="1.0" encoding="UTF-8"?>
<configuration>

    <!-- 读取 springProperty 参考：application.yaml配置 -->
    <springProperty scope="context" name="LOG_LEVEL_ROOT" source="logging.level.root"
                    defaultValue="info"/>
    <springProperty scope="context" name="CONSOLE_LOG_PATTERN" source="logging.pattern.console"
                    defaultValue="%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n"/>
    <springProperty scope="context" name="FILE_LOG_PATTERN" source="logging.pattern.file"
                    defaultValue="%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n"/>
    <springProperty scope="context" name="LOG_FILE" source="logging.file.name"
                    defaultValue="logs/application.log"/>
    <springProperty scope="context" name="LOG_FILE_MAX_SIZE" source="logging.file.max-size"
                    defaultValue="10MB"/>
    <springProperty scope="context" name="LOG_FILE_TOTAL_SIZE_CAP" source="logging.file.total-size-cap"
                    defaultValue="0"/>
    <springProperty scope="context" name="LOG_FILE_MAX_HISTORY" source="logging.file.max-history"
                    defaultValue="7"/>
    <springProperty scope="context" name="LOG_FILE_CLEAN_HISTORY_ON_START" source="logging.file.clean-history-on-start"
                    defaultValue="false"/>

    <!-- 自定义 property 属性 -->
    <!-- 日志格式 -->
    <!--<property name="CONSOLE_LOG_PATTERN" value="%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n"/>-->

    <!-- 控制台日志格式和颜色渲染 -->
    <!-- 彩色日志依赖的渲染类 -->
    <conversionRule conversionWord="clr"
                    converterClass="org.springframework.boot.logging.logback.ColorConverter"/>
    <conversionRule conversionWord="wex"
                    converterClass="org.springframework.boot.logging.logback.WhitespaceThrowableProxyConverter"/>
    <conversionRule conversionWord="wEx"
                    converterClass="org.springframework.boot.logging.logback.ExtendedWhitespaceThrowableProxyConverter"/>
    <!-- 彩色日志格式 -->
    <property name="CONSOLE_LOG_PATTERN"
              value="%clr(%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level) %clr(%logger{36}) - %clr(%msg%n%wex)"/>

    <!-- 控制台输出 -->
    <appender name="CONSOLE" class="ch.qos.logback.core.ConsoleAppender">
        <!--彩色日志输出-->
        <encoder class="ch.qos.logback.core.encoder.LayoutWrappingEncoder">
            <layout class="ch.qos.logback.classic.PatternLayout">
                <pattern>${CONSOLE_LOG_PATTERN}</pattern>
            </layout>
        </encoder>
    </appender>

    <!-- 文件输出 -->
    <appender name="FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${LOG_FILE}</file>
        <!--基于规模和时间的滚动政策-->
        <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
            <fileNamePattern>${LOG_FILE}.%d{yyyy-MM-dd}.%i.log</fileNamePattern> <!-- 日志文件名称格式 -->
            <maxFileSize>${LOG_FILE_MAX_SIZE}</maxFileSize> <!-- 单个日志大小上限-->
            <totalSizeCap>${LOG_FILE_TOTAL_SIZE_CAP}</totalSizeCap> <!-- 设置日志总大小上限 -->
            <maxHistory>${LOG_FILE_MAX_HISTORY}</maxHistory> <!-- 日志文档保留天数 -->
            <cleanHistoryOnStart>${LOG_FILE_CLEAN_HISTORY_ON_START}</cleanHistoryOnStart> <!-- 项目启动时清理过期日志文件 -->
        </rollingPolicy>
        <encoder>
            <pattern>${FILE_LOG_PATTERN}</pattern>
        </encoder>
    </appender>

    <!-- 定义根日志记录器 -->
    <root level="${LOG_LEVEL_ROOT}">
        <appender-ref ref="CONSOLE"/>
        <appender-ref ref="FILE"/>
    </root>
</configuration>